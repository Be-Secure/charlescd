 @Library('ZupSharedLibs@darwin') _

node {
    try {
        buildDockerBuilder {
            dockerRepositoryName = "darwin-application"
            dockerBuilderImage = "openjdk:8-jdk-alpine"
            dockerFileBuilder = "DockerfileBuilder"
            dockerFileLocation = "."
            team = "Realwave"
        }

        mvnBuildWithCompose {
            composeFileName = "docker-compose-ci.yml"
            composeService = "darwin-application"
            composeProjectName = "darwin-application"
            team = "Realwave"
            useBuilder="true"
        }

        stage('SonarQube analysis') {
            def scannerHome = tool 'Sonar Zup';
            withSonarQubeEnv('Sonar Zup') {
                sh "${scannerHome}/bin/sonar-scanner"
            }
        }

        sleep 30

        stage("Quality Gate") {
            timeout(time: 1, unit: 'HOURS') {
               def qg = waitForQualityGate()
               if (qg.status != 'OK') {
                   error "Pipeline aborted due to quality gate failure: ${qg.status}"
               }
           }
        }

        buildDockerContainer {
            dockerRepositoryName = "darwin-application"
            dockerFileLocation = "darwin-web"
            team = "Realwave"
        }

    } catch (e) {
        notifyBuildStatus {
            buildStatus = "FAILED"
        }
        throw e
    }
}
