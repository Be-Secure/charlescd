apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: octopipe-mongo
spec:
  serviceName: "octopipe-mongo"
  replicas: 1
  selector:
    matchLabels:
      app: octopipe-mongo
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: octopipe-mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        envFrom:
          - configMapRef:
              name: octopipe-mongo-config
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /bitnami/mongodb
          name: data
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: dshm
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      volumeMode: Filesystem
    status:
      phase: Pending


# apiVersion: apps/v1beta1
# kind: StatefulSet
# metadata:
#   name: octopipe-mongo
# spec:
#   serviceName: octopipe-mongo
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         role: mongo
#         environment: test
#     spec:
#       terminationGracePeriodSeconds: 10
#       containers:
#         - name: mongo
#           image: mongo:3.4.9
#           command:
#           - /bin/sh
#           - -c
#           - >
#             if [ -f /data/db/admin-user.lock ]; then
#               mongod --replSet rs0 --clusterAuthMode keyFile --keyFile /etc/secrets-volume/mongodb-keyfile --setParameter authenticationMechanisms=SCRAM-SHA-1;
#             else
#               mongod --auth;
#             fi;
#           lifecycle:
#             postStart:
#               exec:
#                 command:
#                 - /bin/sh
#                 - -c
#                 - >
#                   if [ ! -f /data/db/admin-user.lock ]; then
#                     sleep 5;
#                     touch /data/db/admin-user.lock
#                     if [ "$HOSTNAME" = "mongo-0" ]; then
#                       mongo --eval 'db = db.getSiblingDB("admin"); db.createUser({ user: "admin", pwd: "password", roles: [{ role: "root", db: "admin" }]});';
#                     fi;
#                     mongod --shutdown;
#                   fi;
#           ports:
#             - containerPort: 27017
#           volumeMounts:
#             - name: mongo-key
#               mountPath: "/etc/secrets-volume"
#               readOnly: true
#             - name: octopipe-mongo-persistent-storage
#               mountPath: /data/db
#         - name: mongo-sidecar
#           image: cvallance/mongo-k8s-sidecar
#           env:
#             - name: MONGO_SIDECAR_POD_LABELS
#               value: "role=mongo,environment=test"
#             - name: MONGODB_USERNAME
#               value: octopipe
#             - name: MONGODB_PASSWORD
#               value: octopipe
#             - name: MONGODB_DATABASE
#               value: octopipe
#       volumes:
#       - name: mongo-key
#         secret:
#           defaultMode: 0400
#           secretName: mongo-key
#   volumeClaimTemplates:
#   - metadata:
#       name: octopipe-mongo-persistent-storage
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 2Gi
#       volumeMode: Filesystem