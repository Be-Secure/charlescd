{"ast":null,"code":"import React,{memo}from'react';import{useHistory}from'react-router-dom';import Card from'core/components/Card';import{CIRCLE}from'modules/Circles/enums';import{addParamCircle}from'modules/Circles/helpers';import{METRICS_TYPE,CHART_TYPE}from'containers/Metrics/enums';import Styled from'./styled';var CirclesListItem=function CirclesListItem(_ref){var _deployment$build;var id=_ref.id,name=_ref.name,deployment=_ref.deployment;var history=useHistory();var renderMetricsDefault=function renderMetricsDefault(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.Metrics,{id:id,metricType:METRICS_TYPE.REQUESTS_ERRORS_BY_CIRCLE,chartType:CHART_TYPE.NORMAL}),/*#__PURE__*/React.createElement(Styled.Metrics,{id:id,metricType:METRICS_TYPE.REQUESTS_LATENCY_BY_CIRCLE,chartType:CHART_TYPE.NORMAL}));};return/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return addParamCircle(history,id);}},/*#__PURE__*/React.createElement(Card.Circle,{key:id,circle:name,deployedAt:deployment===null||deployment===void 0?void 0:deployment.deployedAt},/*#__PURE__*/React.createElement(Styled.Wrapper,null,/*#__PURE__*/React.createElement(Card.Release,{status:deployment===null||deployment===void 0?void 0:deployment.status,description:deployment===null||deployment===void 0?void 0:(_deployment$build=deployment.build)===null||_deployment$build===void 0?void 0:_deployment$build.tag})),/*#__PURE__*/React.createElement(Styled.Metrics,{id:id,metricType:METRICS_TYPE.REQUESTS_BY_CIRCLE,chartType:CHART_TYPE.NORMAL}),id===CIRCLE.ID_CIRCLE_DEFAULT&&renderMetricsDefault()));};export default memo(CirclesListItem);","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Circles/List/Item/index.tsx"],"names":["React","memo","useHistory","Card","CIRCLE","addParamCircle","METRICS_TYPE","CHART_TYPE","Styled","CirclesListItem","id","name","deployment","history","renderMetricsDefault","REQUESTS_ERRORS_BY_CIRCLE","NORMAL","REQUESTS_LATENCY_BY_CIRCLE","deployedAt","status","build","tag","REQUESTS_BY_CIRCLE","ID_CIRCLE_DEFAULT"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,KAA4B,OAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,cAAT,KAA+B,yBAA/B,CAEA,OAASC,YAAT,CAAuBC,UAAvB,KAAyC,0BAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAoD,0BAAjDC,CAAAA,EAAiD,MAAjDA,EAAiD,CAA7CC,IAA6C,MAA7CA,IAA6C,CAAvCC,UAAuC,MAAvCA,UAAuC,CAC1E,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAEA,GAAMY,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,sBAC3B,qDACE,oBAAC,MAAD,CAAQ,OAAR,EACE,EAAE,CAAEJ,EADN,CAEE,UAAU,CAAEJ,YAAY,CAACS,yBAF3B,CAGE,SAAS,CAAER,UAAU,CAACS,MAHxB,EADF,cAME,oBAAC,MAAD,CAAQ,OAAR,EACE,EAAE,CAAEN,EADN,CAEE,UAAU,CAAEJ,YAAY,CAACW,0BAF3B,CAGE,SAAS,CAAEV,UAAU,CAACS,MAHxB,EANF,CAD2B,EAA7B,CAeA,mBACE,2BAAK,OAAO,CAAE,yBAAMX,CAAAA,cAAc,CAACQ,OAAD,CAAUH,EAAV,CAApB,EAAd,eACE,oBAAC,IAAD,CAAM,MAAN,EAAa,GAAG,CAAEA,EAAlB,CAAsB,MAAM,CAAEC,IAA9B,CAAoC,UAAU,CAAEC,UAAF,SAAEA,UAAF,iBAAEA,UAAU,CAAEM,UAA5D,eACE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,IAAD,CAAM,OAAN,EACE,MAAM,CAAEN,UAAF,SAAEA,UAAF,iBAAEA,UAAU,CAAEO,MADtB,CAEE,WAAW,CAAEP,UAAF,SAAEA,UAAF,oCAAEA,UAAU,CAAEQ,KAAd,4CAAE,kBAAmBC,GAFlC,EADF,CADF,cAOE,oBAAC,MAAD,CAAQ,OAAR,EACE,EAAE,CAAEX,EADN,CAEE,UAAU,CAAEJ,YAAY,CAACgB,kBAF3B,CAGE,SAAS,CAAEf,UAAU,CAACS,MAHxB,EAPF,CAYGN,EAAE,GAAKN,MAAM,CAACmB,iBAAd,EAAmCT,oBAAoB,EAZ1D,CADF,CADF,CAkBD,CApCD,CAsCA,cAAeb,CAAAA,IAAI,CAACQ,eAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from 'core/components/Card';\nimport { CIRCLE } from 'modules/Circles/enums';\nimport { addParamCircle } from 'modules/Circles/helpers';\nimport { CirclePaginationItem } from 'modules/Circles/interfaces/CirclesPagination';\nimport { METRICS_TYPE, CHART_TYPE } from 'containers/Metrics/enums';\nimport Styled from './styled';\n\nconst CirclesListItem = ({ id, name, deployment }: CirclePaginationItem) => {\n  const history = useHistory();\n\n  const renderMetricsDefault = () => (\n    <>\n      <Styled.Metrics\n        id={id}\n        metricType={METRICS_TYPE.REQUESTS_ERRORS_BY_CIRCLE}\n        chartType={CHART_TYPE.NORMAL}\n      />\n      <Styled.Metrics\n        id={id}\n        metricType={METRICS_TYPE.REQUESTS_LATENCY_BY_CIRCLE}\n        chartType={CHART_TYPE.NORMAL}\n      />\n    </>\n  );\n\n  return (\n    <div onClick={() => addParamCircle(history, id)}>\n      <Card.Circle key={id} circle={name} deployedAt={deployment?.deployedAt}>\n        <Styled.Wrapper>\n          <Card.Release\n            status={deployment?.status}\n            description={deployment?.build?.tag}\n          />\n        </Styled.Wrapper>\n        <Styled.Metrics\n          id={id}\n          metricType={METRICS_TYPE.REQUESTS_BY_CIRCLE}\n          chartType={CHART_TYPE.NORMAL}\n        />\n        {id === CIRCLE.ID_CIRCLE_DEFAULT && renderMetricsDefault()}\n      </Card.Circle>\n    </div>\n  );\n};\n\nexport default memo(CirclesListItem);\n"]},"metadata":{},"sourceType":"module"}