{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{lazy,Suspense,useEffect,useState}from'react';import{Route,Switch}from'react-router-dom';import Page from'core/components/Page';import routes from'core/constants/routes';import useCircles,{CIRCLE_TYPES,CIRCLE_STATUS}from'./hooks';import{useGlobalState}from'core/state/hooks';import Filter from'./Filter';import Styled from'./styled';var CirclesList=lazy(function(){return import('modules/Circles/List');});var CirclesComparation=lazy(function(){return import('modules/Circles/Comparation');});var Circles=function Circles(){var _useCircles=useCircles(CIRCLE_TYPES.list),_useCircles2=_slicedToArray(_useCircles,2),loading=_useCircles2[0],filterCircles=_useCircles2[1];var _useGlobalState=useGlobalState(function(_ref){var circles=_ref.circles;return circles;}),list=_useGlobalState.list;var _useState=useState(CIRCLE_STATUS.active),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];useEffect(function(){filterCircles(name,status);},[status,name,filterCircles]);return/*#__PURE__*/React.createElement(Page,null,/*#__PURE__*/React.createElement(Page.Menu,null,/*#__PURE__*/React.createElement(Filter,{isLoading:loading,items:list===null||list===void 0?void 0:list.content,status:status,onSearch:setName,onSelect:setStatus})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"\"},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:routes.circles},/*#__PURE__*/React.createElement(Styled.Scrollable,null,/*#__PURE__*/React.createElement(CirclesList,null))),/*#__PURE__*/React.createElement(Route,{exact:true,path:routes.circlesComparation},/*#__PURE__*/React.createElement(Styled.ScrollableX,null,/*#__PURE__*/React.createElement(CirclesComparation,null))))));};export default Circles;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Circles/index.tsx"],"names":["React","lazy","Suspense","useEffect","useState","Route","Switch","Page","routes","useCircles","CIRCLE_TYPES","CIRCLE_STATUS","useGlobalState","Filter","Styled","CirclesList","CirclesComparation","Circles","list","loading","filterCircles","circles","active","status","setStatus","name","setName","content","circlesComparation"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,CAAgCC,SAAhC,CAA2CC,QAA3C,KAA2D,OAA3D,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,UAAP,EAAqBC,YAArB,CAAmCC,aAAnC,KAAwD,SAAxD,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,WAAW,CAAGd,IAAI,CAAC,iBAAM,QAAO,sBAAP,CAAN,EAAD,CAAxB,CACA,GAAMe,CAAAA,kBAAkB,CAAGf,IAAI,CAAC,iBAAM,QAAO,6BAAP,CAAN,EAAD,CAA/B,CAEA,GAAMgB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,iBACaR,UAAU,CAACC,YAAY,CAACQ,IAAd,CADvB,4CACbC,OADa,iBACJC,aADI,qCAEHR,cAAc,CAAC,kBAAGS,CAAAA,OAAH,MAAGA,OAAH,OAAiBA,CAAAA,OAAjB,EAAD,CAFX,CAEZH,IAFY,iBAEZA,IAFY,eAGQd,QAAQ,CAASO,aAAa,CAACW,MAAvB,CAHhB,wCAGbC,MAHa,eAGLC,SAHK,8BAIIpB,QAAQ,CAAC,EAAD,CAJZ,yCAIbqB,IAJa,eAIPC,OAJO,eAMpBvB,SAAS,CAAC,UAAM,CACdiB,aAAa,CAACK,IAAD,CAAOF,MAAP,CAAb,CACD,CAFQ,CAEN,CAACA,MAAD,CAASE,IAAT,CAAeL,aAAf,CAFM,CAAT,CAIA,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,MAAD,EACE,SAAS,CAAED,OADb,CAEE,KAAK,CAAED,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAES,OAFf,CAGE,MAAM,CAAEJ,MAHV,CAIE,QAAQ,CAAEG,OAJZ,CAKE,QAAQ,CAAEF,SALZ,EADF,CADF,cAUE,oBAAC,QAAD,EAAU,QAAQ,CAAC,EAAnB,eACE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAEhB,MAAM,CAACa,OAA1B,eACE,oBAAC,MAAD,CAAQ,UAAR,mBACE,oBAAC,WAAD,MADF,CADF,CADF,cAME,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAEb,MAAM,CAACoB,kBAA1B,eACE,oBAAC,MAAD,CAAQ,WAAR,mBACE,oBAAC,kBAAD,MADF,CADF,CANF,CADF,CAVF,CADF,CA2BD,CArCD,CAuCA,cAAeX,CAAAA,OAAf","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Page from 'core/components/Page';\nimport routes from 'core/constants/routes';\nimport useCircles, { CIRCLE_TYPES, CIRCLE_STATUS } from './hooks';\nimport { useGlobalState } from 'core/state/hooks';\nimport Filter from './Filter';\nimport Styled from './styled';\n\nconst CirclesList = lazy(() => import('modules/Circles/List'));\nconst CirclesComparation = lazy(() => import('modules/Circles/Comparation'));\n\nconst Circles = () => {\n  const [loading, filterCircles] = useCircles(CIRCLE_TYPES.list);\n  const { list } = useGlobalState(({ circles }) => circles);\n  const [status, setStatus] = useState<string>(CIRCLE_STATUS.active);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    filterCircles(name, status);\n  }, [status, name, filterCircles]);\n\n  return (\n    <Page>\n      <Page.Menu>\n        <Filter\n          isLoading={loading}\n          items={list?.content}\n          status={status}\n          onSearch={setName}\n          onSelect={setStatus}\n        />\n      </Page.Menu>\n      <Suspense fallback=\"\">\n        <Switch>\n          <Route exact path={routes.circles}>\n            <Styled.Scrollable>\n              <CirclesList />\n            </Styled.Scrollable>\n          </Route>\n          <Route exact path={routes.circlesComparation}>\n            <Styled.ScrollableX>\n              <CirclesComparation />\n            </Styled.ScrollableX>\n          </Route>\n        </Switch>\n      </Suspense>\n    </Page>\n  );\n};\n\nexport default Circles;\n"]},"metadata":{},"sourceType":"module"}