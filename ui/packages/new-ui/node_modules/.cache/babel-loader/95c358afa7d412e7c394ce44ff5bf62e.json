{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{getProfileByKey}from'core/utils/profile';import Page from'core/components/Page';import Icon from'core/components/Icon';import Text from'core/components/Text';import{useGlobalState}from'core/state/hooks';import useWorkspace from'./hooks';import Styled from'./styled';import Menu from'./Menu';var Placeholder=function Placeholder(){var profileName=getProfileByKey('name');return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.Wrapper,null,/*#__PURE__*/React.createElement(Icon,{name:\"empty-workspaces\"})),/*#__PURE__*/React.createElement(Styled.Empty,null,/*#__PURE__*/React.createElement(Text.h1,{color:\"light\",align:\"center\"},\"Hello, \",profileName,\"!\"),/*#__PURE__*/React.createElement(Text.h1,{color:\"light\",align:\"center\"},\"You need to select a workspace in the side menu to get started.\")));};var Workspace=function Workspace(){var _useWorkspace=useWorkspace(),_useWorkspace2=_slicedToArray(_useWorkspace,1),filterWorkspace=_useWorkspace2[0];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useGlobalState=useGlobalState(function(_ref){var workspaces=_ref.workspaces;return workspaces;}),list=_useGlobalState.list;useEffect(function(){filterWorkspace(name);},[name,filterWorkspace]);return/*#__PURE__*/React.createElement(Page,null,/*#__PURE__*/React.createElement(Page.Menu,null,/*#__PURE__*/React.createElement(Menu,{items:list===null||list===void 0?void 0:list.content,onSearch:setName})),/*#__PURE__*/React.createElement(Page.Content,null,/*#__PURE__*/React.createElement(Placeholder,null)));};export default Workspace;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Settings/Workspaces/index.tsx"],"names":["React","useState","useEffect","getProfileByKey","Page","Icon","Text","useGlobalState","useWorkspace","Styled","Menu","Placeholder","profileName","Workspace","filterWorkspace","name","setName","workspaces","list","content"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,WAAW,CAAGT,eAAe,CAAC,MAAD,CAAnC,CAEA,mBACE,qDACE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,IAAD,EAAM,IAAI,CAAC,kBAAX,EADF,CADF,cAIE,oBAAC,MAAD,CAAQ,KAAR,mBACE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,OAAf,CAAuB,KAAK,CAAC,QAA7B,YACUS,WADV,KADF,cAIE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,OAAf,CAAuB,KAAK,CAAC,QAA7B,oEAJF,CAJF,CADF,CAeD,CAlBD,CAoBA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,mBACIL,YAAY,EADhB,gDACfM,eADe,iCAEEb,QAAQ,CAAC,EAAD,CAFV,wCAEfc,IAFe,eAETC,OAFS,mCAGLT,cAAc,CAAC,kBAAGU,CAAAA,UAAH,MAAGA,UAAH,OAAoBA,CAAAA,UAApB,EAAD,CAHT,CAGdC,IAHc,iBAGdA,IAHc,CAKtBhB,SAAS,CAAC,UAAM,CACdY,eAAe,CAACC,IAAD,CAAf,CACD,CAFQ,CAEN,CAACA,IAAD,CAAOD,eAAP,CAFM,CAAT,CAIA,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAEI,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEC,OAAnB,CAA4B,QAAQ,CAAEH,OAAtC,EADF,CADF,cAIE,oBAAC,IAAD,CAAM,OAAN,mBACE,oBAAC,WAAD,MADF,CAJF,CADF,CAUD,CAnBD,CAqBA,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getProfileByKey } from 'core/utils/profile';\nimport Page from 'core/components/Page';\nimport Icon from 'core/components/Icon';\nimport Text from 'core/components/Text';\nimport { useGlobalState } from 'core/state/hooks';\nimport useWorkspace from './hooks';\nimport Styled from './styled';\nimport Menu from './Menu';\n\nconst Placeholder = () => {\n  const profileName = getProfileByKey('name');\n\n  return (\n    <>\n      <Styled.Wrapper>\n        <Icon name=\"empty-workspaces\" />\n      </Styled.Wrapper>\n      <Styled.Empty>\n        <Text.h1 color=\"light\" align=\"center\">\n          Hello, {profileName}!\n        </Text.h1>\n        <Text.h1 color=\"light\" align=\"center\">\n          You need to select a workspace in the side menu to get started.\n        </Text.h1>\n      </Styled.Empty>\n    </>\n  );\n};\n\nconst Workspace = () => {\n  const [filterWorkspace] = useWorkspace();\n  const [name, setName] = useState('');\n  const { list } = useGlobalState(({ workspaces }) => workspaces);\n\n  useEffect(() => {\n    filterWorkspace(name);\n  }, [name, filterWorkspace]);\n\n  return (\n    <Page>\n      <Page.Menu>\n        <Menu items={list?.content} onSearch={setName} />\n      </Page.Menu>\n      <Page.Content>\n        <Placeholder />\n      </Page.Content>\n    </Page>\n  );\n};\n\nexport default Workspace;\n"]},"metadata":{},"sourceType":"module"}