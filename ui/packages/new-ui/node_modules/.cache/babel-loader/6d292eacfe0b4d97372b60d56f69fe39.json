{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import map from'lodash/map';import Icon from'core/components/Icon';import Button from'core/components/Button';import Text from'core/components/Text';import useOutsideClick from'core/hooks/useClickOutside';import Styled from'./styled';var Dropdown=function Dropdown(_ref){var actions=_ref.actions;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],switchToggle=_useState2[1];var ref=useRef();useOutsideClick(ref,function(){switchToggle(!toggle);});var handleClick=function handleClick(onClick){switchToggle(!toggle);onClick();};var renderItem=function renderItem(_ref2){var icon=_ref2.icon,name=_ref2.name,_onClick=_ref2.onClick;return/*#__PURE__*/React.createElement(Styled.Item,{key:\"dropdown-item-\".concat(icon).concat(name),onClick:function onClick(){return handleClick(_onClick);}},icon&&/*#__PURE__*/React.createElement(Icon,{name:icon}),/*#__PURE__*/React.createElement(Text.h5,{color:\"dark\"},name));};var renderItems=function renderItems(){return/*#__PURE__*/React.createElement(Styled.Dropdown,{ref:ref,\"data-testid\":\"dropdown-actions\"},map(actions,function(action){return renderItem(action);}));};return/*#__PURE__*/React.createElement(Styled.Wrapper,{\"data-testid\":\"dropdown\"},/*#__PURE__*/React.createElement(Button.Icon,{name:\"vertical-dots\",color:\"dark\",size:\"15px\",onClick:function onClick(){return switchToggle(!toggle);}}),toggle&&renderItems());};export default Dropdown;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/core/components/Dropdown/index.tsx"],"names":["React","useState","useRef","map","Icon","Button","Text","useOutsideClick","Styled","Dropdown","actions","toggle","switchToggle","ref","handleClick","onClick","renderItem","icon","name","renderItems","action"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAYA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwB,IAArBC,CAAAA,OAAqB,MAArBA,OAAqB,eACRT,QAAQ,CAAC,KAAD,CADA,wCAChCU,MADgC,eACxBC,YADwB,eAEvC,GAAMC,CAAAA,GAAG,CAAGX,MAAM,EAAlB,CAEAK,eAAe,CAACM,GAAD,CAAM,UAAM,CACzBD,YAAY,CAAC,CAACD,MAAF,CAAZ,CACD,CAFc,CAAf,CAIA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAuB,CACzCH,YAAY,CAAC,CAACD,MAAF,CAAZ,CACAI,OAAO,GACR,CAHD,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,WAAGC,CAAAA,IAAH,OAAGA,IAAH,CAASC,IAAT,OAASA,IAAT,CAAeH,QAAf,OAAeA,OAAf,oBACjB,oBAAC,MAAD,CAAQ,IAAR,EACE,GAAG,yBAAmBE,IAAnB,SAA0BC,IAA1B,CADL,CAEE,OAAO,CAAE,yBAAMJ,CAAAA,WAAW,CAACC,QAAD,CAAjB,EAFX,EAIGE,IAAI,eAAI,oBAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,EAJX,cAKE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,MAAf,EAAuBC,IAAvB,CALF,CADiB,EAAnB,CAUA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAClB,oBAAC,MAAD,CAAQ,QAAR,EAAiB,GAAG,CAAEN,GAAtB,CAA2B,cAAY,kBAAvC,EACGV,GAAG,CAACO,OAAD,CAAU,SAAAU,MAAM,QAAIJ,CAAAA,UAAU,CAACI,MAAD,CAAd,EAAhB,CADN,CADkB,EAApB,CAMA,mBACE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,cAAY,UAA5B,eACE,oBAAC,MAAD,CAAQ,IAAR,EACE,IAAI,CAAC,eADP,CAEE,KAAK,CAAC,MAFR,CAGE,IAAI,CAAC,MAHP,CAIE,OAAO,CAAE,yBAAMR,CAAAA,YAAY,CAAC,CAACD,MAAF,CAAlB,EAJX,EADF,CAOGA,MAAM,EAAIQ,WAAW,EAPxB,CADF,CAWD,CAxCD,CA0CA,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport map from 'lodash/map';\nimport Icon from 'core/components/Icon';\nimport Button from 'core/components/Button';\nimport Text from 'core/components/Text';\nimport useOutsideClick from 'core/hooks/useClickOutside';\nimport Styled from './styled';\n\nexport interface Action {\n  icon?: string;\n  name: string;\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\ninterface Props {\n  actions: Action[];\n}\n\nconst Dropdown = ({ actions }: Props) => {\n  const [toggle, switchToggle] = useState(false);\n  const ref = useRef<HTMLDivElement>();\n\n  useOutsideClick(ref, () => {\n    switchToggle(!toggle);\n  });\n\n  const handleClick = (onClick: Function) => {\n    switchToggle(!toggle);\n    onClick();\n  };\n\n  const renderItem = ({ icon, name, onClick }: Action) => (\n    <Styled.Item\n      key={`dropdown-item-${icon}${name}`}\n      onClick={() => handleClick(onClick)}\n    >\n      {icon && <Icon name={icon} />}\n      <Text.h5 color=\"dark\">{name}</Text.h5>\n    </Styled.Item>\n  );\n\n  const renderItems = () => (\n    <Styled.Dropdown ref={ref} data-testid=\"dropdown-actions\">\n      {map(actions, action => renderItem(action))}\n    </Styled.Dropdown>\n  );\n\n  return (\n    <Styled.Wrapper data-testid=\"dropdown\">\n      <Button.Icon\n        name=\"vertical-dots\"\n        color=\"dark\"\n        size=\"15px\"\n        onClick={() => switchToggle(!toggle)}\n      />\n      {toggle && renderItems()}\n    </Styled.Wrapper>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}