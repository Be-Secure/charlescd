{"ast":null,"code":"import React from'react';import map from'lodash/map';import Text from'core/components/Text';import LabeledIcon from'core/components/LabeledIcon';import Menu from'core/components/Menu';import routes from'core/constants/routes';import{menuFilterItems}from'../constants';import{CIRCLE_STATUS}from'../hooks';import MenuItem from'./MenuItem';import Loader from'./Loaders';import Styled from'./styled';var CirclesFilter=function CirclesFilter(_ref){var items=_ref.items,status=_ref.status,onSearch=_ref.onSearch,onSelect=_ref.onSelect,isLoading=_ref.isLoading;var renderItems=function renderItems(){return map(items,function(_ref2){var id=_ref2.id,name=_ref2.name;return/*#__PURE__*/React.createElement(MenuItem,{key:id,id:id,name:name});});};var circleStatus=status===CIRCLE_STATUS.active?'Active':'Inactive';return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.Actions,null,/*#__PURE__*/React.createElement(Styled.A,{href:routes.circlesCreate},/*#__PURE__*/React.createElement(LabeledIcon,{icon:\"plus-circle\",marginContent:\"5px\"},/*#__PURE__*/React.createElement(Text.h5,{color:\"dark\"},\"Create circle\"))),/*#__PURE__*/React.createElement(Menu,{actions:menuFilterItems,active:status,onSelect:onSelect},/*#__PURE__*/React.createElement(LabeledIcon,{icon:\"filter\",marginContent:\"5px\"},/*#__PURE__*/React.createElement(Text.h5,{color:\"dark\"},circleStatus))),/*#__PURE__*/React.createElement(Styled.A,{href:routes.circlesMatcher},/*#__PURE__*/React.createElement(Styled.Icon,{name:\"circle-matcher\",color:\"dark\"})),/*#__PURE__*/React.createElement(Styled.A,{href:routes.circles},/*#__PURE__*/React.createElement(Styled.Icon,{name:\"activity\",color:\"dark\"}))),/*#__PURE__*/React.createElement(Styled.SearchInput,{resume:true,onSearch:onSearch}),/*#__PURE__*/React.createElement(Styled.Content,null,/*#__PURE__*/React.createElement(Styled.List,null,isLoading?/*#__PURE__*/React.createElement(Loader.List,null):renderItems())));};export default CirclesFilter;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Circles/Filter/index.tsx"],"names":["React","map","Text","LabeledIcon","Menu","routes","menuFilterItems","CIRCLE_STATUS","MenuItem","Loader","Styled","CirclesFilter","items","status","onSearch","onSelect","isLoading","renderItems","id","name","circleStatus","active","circlesCreate","circlesMatcher","circles"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAUA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAMT,IALXC,CAAAA,KAKW,MALXA,KAKW,CAJXC,MAIW,MAJXA,MAIW,CAHXC,QAGW,MAHXA,QAGW,CAFXC,QAEW,MAFXA,QAEW,CADXC,SACW,MADXA,SACW,CACX,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAClBhB,CAAAA,GAAG,CAACW,KAAD,CAAQ,mBAAGM,CAAAA,EAAH,OAAGA,EAAH,CAAOC,IAAP,OAAOA,IAAP,oBACT,oBAAC,QAAD,EAAU,GAAG,CAAED,EAAf,CAAmB,EAAE,CAAEA,EAAvB,CAA2B,IAAI,CAAEC,IAAjC,EADS,EAAR,CADe,EAApB,CAKA,GAAMC,CAAAA,YAAY,CAAGP,MAAM,GAAKN,aAAa,CAACc,MAAzB,CAAkC,QAAlC,CAA6C,UAAlE,CAEA,mBACE,qDACE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,MAAD,CAAQ,CAAR,EAAU,IAAI,CAAEhB,MAAM,CAACiB,aAAvB,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,aAAlB,CAAgC,aAAa,CAAC,KAA9C,eACE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,MAAf,kBADF,CADF,CADF,cAME,oBAAC,IAAD,EAAM,OAAO,CAAEhB,eAAf,CAAgC,MAAM,CAAEO,MAAxC,CAAgD,QAAQ,CAAEE,QAA1D,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,QAAlB,CAA2B,aAAa,CAAC,KAAzC,eACE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,MAAf,EAAuBK,YAAvB,CADF,CADF,CANF,cAWE,oBAAC,MAAD,CAAQ,CAAR,EAAU,IAAI,CAAEf,MAAM,CAACkB,cAAvB,eACE,oBAAC,MAAD,CAAQ,IAAR,EAAa,IAAI,CAAC,gBAAlB,CAAmC,KAAK,CAAC,MAAzC,EADF,CAXF,cAcE,oBAAC,MAAD,CAAQ,CAAR,EAAU,IAAI,CAAElB,MAAM,CAACmB,OAAvB,eACE,oBAAC,MAAD,CAAQ,IAAR,EAAa,IAAI,CAAC,UAAlB,CAA6B,KAAK,CAAC,MAAnC,EADF,CAdF,CADF,cAmBE,oBAAC,MAAD,CAAQ,WAAR,EAAoB,MAAM,KAA1B,CAA2B,QAAQ,CAAEV,QAArC,EAnBF,cAoBE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,MAAD,CAAQ,IAAR,MAAcE,SAAS,cAAG,oBAAC,MAAD,CAAQ,IAAR,MAAH,CAAqBC,WAAW,EAAvD,CADF,CApBF,CADF,CA0BD,CAxCD,CA0CA,cAAeN,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport map from 'lodash/map';\nimport Text from 'core/components/Text';\nimport LabeledIcon from 'core/components/LabeledIcon';\nimport Menu from 'core/components/Menu';\nimport routes from 'core/constants/routes';\nimport { CirclePaginationItem } from '../interfaces/CirclesPagination';\nimport { menuFilterItems } from '../constants';\nimport { CIRCLE_STATUS } from '../hooks';\nimport MenuItem from './MenuItem';\nimport Loader from './Loaders';\nimport Styled from './styled';\n\ninterface Props {\n  items: CirclePaginationItem[];\n  status: string;\n  onSearch: (name: string) => void;\n  onSelect: (selected: string) => void;\n  isLoading: boolean;\n}\n\nconst CirclesFilter = ({\n  items,\n  status,\n  onSearch,\n  onSelect,\n  isLoading\n}: Props) => {\n  const renderItems = () =>\n    map(items, ({ id, name }: CirclePaginationItem) => (\n      <MenuItem key={id} id={id} name={name} />\n    ));\n\n  const circleStatus = status === CIRCLE_STATUS.active ? 'Active' : 'Inactive';\n\n  return (\n    <>\n      <Styled.Actions>\n        <Styled.A href={routes.circlesCreate}>\n          <LabeledIcon icon=\"plus-circle\" marginContent=\"5px\">\n            <Text.h5 color=\"dark\">Create circle</Text.h5>\n          </LabeledIcon>\n        </Styled.A>\n        <Menu actions={menuFilterItems} active={status} onSelect={onSelect}>\n          <LabeledIcon icon=\"filter\" marginContent=\"5px\">\n            <Text.h5 color=\"dark\">{circleStatus}</Text.h5>\n          </LabeledIcon>\n        </Menu>\n        <Styled.A href={routes.circlesMatcher}>\n          <Styled.Icon name=\"circle-matcher\" color=\"dark\" />\n        </Styled.A>\n        <Styled.A href={routes.circles}>\n          <Styled.Icon name=\"activity\" color=\"dark\" />\n        </Styled.A>\n      </Styled.Actions>\n      <Styled.SearchInput resume onSearch={onSearch} />\n      <Styled.Content>\n        <Styled.List>{isLoading ? <Loader.List /> : renderItems()}</Styled.List>\n      </Styled.Content>\n    </>\n  );\n};\n\nexport default CirclesFilter;\n"]},"metadata":{},"sourceType":"module"}