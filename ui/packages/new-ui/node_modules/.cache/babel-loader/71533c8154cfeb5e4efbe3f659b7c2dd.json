{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{useHistory}from'react-router';import copyToClipboard from'clipboard-copy';import{useCircle}from'modules/Circles/hooks';import{delParamCircle}from'modules/Circles/helpers';import TabPanel from'core/components/TabPanel';import Text from'core/components/Text';import LabeledIcon from'core/components/LabeledIcon';import Dropdown from'core/components/Dropdown';import{goToV2}from'core/helpers/path';import LayerName from'./Layer/Name';import LayerSegments from'./Layer/Segments';import LayerLastRelease from'./Layer/LastRelease';import LayerModules from'./Layer/Modules';import LayerMetrics from'./Layer/Metrics';import{pathCircleById,pathCircleEditById,isDefaultCircle}from'./helpers';import Loader from'./Loaders';import Styled from'./styled';var CirclesComparationItem=function CirclesComparationItem(_ref){var id=_ref.id;var history=useHistory();var _useCircle=useCircle(),_useCircle2=_slicedToArray(_useCircle,2),circle=_useCircle2[0],loadCircle=_useCircle2[1];var actions=[{icon:'edit',name:'Edit',onClick:function onClick(){return goToV2(pathCircleEditById(id));}},{icon:'copy',name:'Copy link',onClick:function onClick(){return copyToClipboard(pathCircleById(id));}}];useEffect(function(){loadCircle(id);},[id,loadCircle]);var renderActions=function renderActions(){return/*#__PURE__*/React.createElement(Styled.Actions,null,/*#__PURE__*/React.createElement(Styled.A,{href:\"\".concat(pathCircleEditById(id),\"?tabName=RELEASE\")},/*#__PURE__*/React.createElement(LabeledIcon,{icon:\"override\",marginContent:\"5px\"},/*#__PURE__*/React.createElement(Text.h5,{color:\"dark\"},\"Override release\"))),/*#__PURE__*/React.createElement(Dropdown,{actions:actions}));};var renderRelease=function renderRelease(){return circle.deployment&&/*#__PURE__*/React.createElement(LayerLastRelease,{deployment:circle.deployment});};var renderModules=function renderModules(){return isDefaultCircle(circle.name)&&/*#__PURE__*/React.createElement(LayerModules,{deployment:circle.deployment});};var renderPanel=function renderPanel(){return/*#__PURE__*/React.createElement(TabPanel,{title:circle.name,onClose:function onClose(){return delParamCircle(history,id);},actions:renderActions(),name:\"circles\",size:\"15px\"},/*#__PURE__*/React.createElement(LayerName,{name:circle.name}),/*#__PURE__*/React.createElement(LayerSegments,{rules:circle.rules}),renderRelease(),renderModules(),/*#__PURE__*/React.createElement(LayerMetrics,{id:id}));};return/*#__PURE__*/React.createElement(Styled.Wrapper,{\"data-testid\":\"circles-comparation-item-\".concat(id)},!circle?/*#__PURE__*/React.createElement(Loader.Tab,null):renderPanel());};export default CirclesComparationItem;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Circles/Comparation/Item/index.tsx"],"names":["React","useEffect","useHistory","copyToClipboard","useCircle","delParamCircle","TabPanel","Text","LabeledIcon","Dropdown","goToV2","LayerName","LayerSegments","LayerLastRelease","LayerModules","LayerMetrics","pathCircleById","pathCircleEditById","isDefaultCircle","Loader","Styled","CirclesComparationItem","id","history","circle","loadCircle","actions","icon","name","onClick","renderActions","renderRelease","deployment","renderModules","renderPanel","rules"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport copyToClipboard from 'clipboard-copy';\nimport { useCircle } from 'modules/Circles/hooks';\nimport { delParamCircle } from 'modules/Circles/helpers';\nimport TabPanel from 'core/components/TabPanel';\nimport Text from 'core/components/Text';\nimport LabeledIcon from 'core/components/LabeledIcon';\nimport Dropdown from 'core/components/Dropdown';\nimport { goToV2 } from 'core/helpers/path';\nimport LayerName from './Layer/Name';\nimport LayerSegments from './Layer/Segments';\nimport LayerLastRelease from './Layer/LastRelease';\nimport LayerModules from './Layer/Modules';\nimport LayerMetrics from './Layer/Metrics';\nimport { pathCircleById, pathCircleEditById, isDefaultCircle } from './helpers';\nimport Loader from './Loaders';\nimport Styled from './styled';\n\ninterface Props {\n  id: string;\n}\n\nconst CirclesComparationItem = ({ id }: Props) => {\n  const history = useHistory();\n  const [circle, loadCircle] = useCircle();\n\n  const actions = [\n    {\n      icon: 'edit',\n      name: 'Edit',\n      onClick: () => goToV2(pathCircleEditById(id))\n    },\n    {\n      icon: 'copy',\n      name: 'Copy link',\n      onClick: () => copyToClipboard(pathCircleById(id))\n    }\n  ];\n\n  useEffect(() => {\n    loadCircle(id);\n  }, [id, loadCircle]);\n\n  const renderActions = () => (\n    <Styled.Actions>\n      <Styled.A href={`${pathCircleEditById(id)}?tabName=RELEASE`}>\n        <LabeledIcon icon=\"override\" marginContent=\"5px\">\n          <Text.h5 color=\"dark\">Override release</Text.h5>\n        </LabeledIcon>\n      </Styled.A>\n      <Dropdown actions={actions} />\n    </Styled.Actions>\n  );\n\n  const renderRelease = () =>\n    circle.deployment && <LayerLastRelease deployment={circle.deployment} />;\n\n  const renderModules = () =>\n    isDefaultCircle(circle.name) && (\n      <LayerModules deployment={circle.deployment} />\n    );\n\n  const renderPanel = () => (\n    <TabPanel\n      title={circle.name}\n      onClose={() => delParamCircle(history, id)}\n      actions={renderActions()}\n      name=\"circles\"\n      size=\"15px\"\n    >\n      <LayerName name={circle.name} />\n      <LayerSegments rules={circle.rules} />\n      {renderRelease()}\n      {renderModules()}\n      <LayerMetrics id={id} />\n    </TabPanel>\n  );\n\n  return (\n    <Styled.Wrapper data-testid={`circles-comparation-item-${id}`}>\n      {!circle ? <Loader.Tab /> : renderPanel()}\n    </Styled.Wrapper>\n  );\n};\n\nexport default CirclesComparationItem;\n"]},"metadata":{},"sourceType":"module"}