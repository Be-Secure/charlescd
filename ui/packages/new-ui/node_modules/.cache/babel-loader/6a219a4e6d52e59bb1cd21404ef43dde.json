{"ast":null,"code":"import _objectSpread from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import map from'lodash/map';import Text from'core/components/Text';import{AreaChart}from'core/components/Charts';import{PERIODS}from'./constants';import{PROJECTION_TYPE}from'./enums';import metricOptions from'./metric.options';import useWorker from'./useWorker';import metricWorker from'./metricWorker';import Styled from'./styled';import{getChartColor}from'./helpers';var CircleMetrics=function CircleMetrics(_ref){var id=_ref.id,metricType=_ref.metricType,chartType=_ref.chartType,className=_ref.className;var _useState=useState(PROJECTION_TYPE.FIVE_MINUTES),_useState2=_slicedToArray(_useState,2),projectionType=_useState2[0],setProjectionType=_useState2[1];var _useWorker=useWorker(metricWorker,[]),_useWorker2=_slicedToArray(_useWorker,2),series=_useWorker2[0],workerHook=_useWorker2[1];var colors=getChartColor(metricType,chartType);var options=_objectSpread({},metricOptions,{colors:colors});useEffect(function(){workerHook({circleId:id,metricType:metricType,projectionType:projectionType,chartType:chartType});},[id,metricType,projectionType,chartType,workerHook]);return/*#__PURE__*/React.createElement(Styled.Wrapper,{className:className,\"data-testid\":\"circle-metric-\".concat(id),onClick:function onClick(e){return e.stopPropagation();}},/*#__PURE__*/React.createElement(AreaChart,{options:options,series:series}),/*#__PURE__*/React.createElement(Styled.Controls,null,map(PERIODS,function(_ref2){var value=_ref2.value,label=_ref2.label,type=_ref2.type;return/*#__PURE__*/React.createElement(Styled.ControlItem,{key:value,isActive:type===projectionType,onClick:function onClick(){return setProjectionType(type);},\"data-testid\":\"circle-metric-control-\".concat(value).concat(label)},/*#__PURE__*/React.createElement(Text.h6,{align:\"center\"},\"\".concat(value,\" \").concat(label)));})));};export default CircleMetrics;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/containers/Metrics/index.tsx"],"names":["React","useEffect","useState","map","Text","AreaChart","PERIODS","PROJECTION_TYPE","metricOptions","useWorker","metricWorker","Styled","getChartColor","CircleMetrics","id","metricType","chartType","className","FIVE_MINUTES","projectionType","setProjectionType","series","workerHook","colors","options","circleId","e","stopPropagation","value","label","type"],"mappings":"mWAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAmCC,eAAnC,KAA0D,SAA1D,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,aAAT,KAA8B,WAA9B,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAqD,IAAlDC,CAAAA,EAAkD,MAAlDA,EAAkD,CAA9CC,UAA8C,MAA9CA,UAA8C,CAAlCC,SAAkC,MAAlCA,SAAkC,CAAvBC,SAAuB,MAAvBA,SAAuB,eAC7Bf,QAAQ,CAClDK,eAAe,CAACW,YADkC,CADqB,wCAClEC,cADkE,eAClDC,iBADkD,8BAI5CX,SAAS,CAAKC,YAAL,CAAmB,EAAnB,CAJmC,0CAIlEW,MAJkE,gBAI1DC,UAJ0D,gBAKzE,GAAMC,CAAAA,MAAM,CAAGX,aAAa,CAACG,UAAD,CAAaC,SAAb,CAA5B,CACA,GAAMQ,CAAAA,OAAO,kBAAQhB,aAAR,EAAuBe,MAAM,CAANA,MAAvB,EAAb,CAEAtB,SAAS,CAAC,UAAM,CACdqB,UAAU,CAAC,CACTG,QAAQ,CAAEX,EADD,CAETC,UAAU,CAAVA,UAFS,CAGTI,cAAc,CAAdA,cAHS,CAITH,SAAS,CAATA,SAJS,CAAD,CAAV,CAMD,CAPQ,CAON,CAACF,EAAD,CAAKC,UAAL,CAAiBI,cAAjB,CAAiCH,SAAjC,CAA4CM,UAA5C,CAPM,CAAT,CASA,mBACE,oBAAC,MAAD,CAAQ,OAAR,EACE,SAAS,CAAEL,SADb,CAEE,sCAA8BH,EAA9B,CAFF,CAGE,OAAO,CAAE,iBAAAY,CAAC,QAAIA,CAAAA,CAAC,CAACC,eAAF,EAAJ,EAHZ,eAKE,oBAAC,SAAD,EAAW,OAAO,CAAEH,OAApB,CAA6B,MAAM,CAAEH,MAArC,EALF,cAME,oBAAC,MAAD,CAAQ,QAAR,MACGlB,GAAG,CAACG,OAAD,CAAU,mBAAGsB,CAAAA,KAAH,OAAGA,KAAH,CAAUC,KAAV,OAAUA,KAAV,CAAiBC,IAAjB,OAAiBA,IAAjB,oBACZ,oBAAC,MAAD,CAAQ,WAAR,EACE,GAAG,CAAEF,KADP,CAEE,QAAQ,CAAEE,IAAI,GAAKX,cAFrB,CAGE,OAAO,CAAE,yBAAMC,CAAAA,iBAAiB,CAACU,IAAD,CAAvB,EAHX,CAIE,8CAAsCF,KAAtC,SAA8CC,KAA9C,CAJF,eAME,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,QAAf,YAA4BD,KAA5B,aAAqCC,KAArC,EANF,CADY,EAAV,CADN,CANF,CADF,CAqBD,CAtCD,CAwCA,cAAehB,CAAAA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport map from 'lodash/map';\nimport Text from 'core/components/Text';\nimport { AreaChart } from 'core/components/Charts';\nimport { PERIODS } from './constants';\nimport { METRICS_TYPE, CHART_TYPE, PROJECTION_TYPE } from './enums';\nimport metricOptions from './metric.options';\nimport useWorker from './useWorker';\nimport metricWorker from './metricWorker';\nimport Styled from './styled';\nimport { getChartColor } from './helpers';\n\ninterface Props {\n  id: string;\n  metricType: METRICS_TYPE;\n  chartType: CHART_TYPE;\n  className?: string;\n}\n\nconst CircleMetrics = ({ id, metricType, chartType, className }: Props) => {\n  const [projectionType, setProjectionType] = useState(\n    PROJECTION_TYPE.FIVE_MINUTES\n  );\n  const [series, workerHook] = useWorker<[]>(metricWorker, []);\n  const colors = getChartColor(metricType, chartType);\n  const options = { ...metricOptions, colors };\n\n  useEffect(() => {\n    workerHook({\n      circleId: id,\n      metricType,\n      projectionType,\n      chartType\n    });\n  }, [id, metricType, projectionType, chartType, workerHook]);\n\n  return (\n    <Styled.Wrapper\n      className={className}\n      data-testid={`circle-metric-${id}`}\n      onClick={e => e.stopPropagation()}\n    >\n      <AreaChart options={options} series={series} />\n      <Styled.Controls>\n        {map(PERIODS, ({ value, label, type }) => (\n          <Styled.ControlItem\n            key={value}\n            isActive={type === projectionType}\n            onClick={() => setProjectionType(type)}\n            data-testid={`circle-metric-control-${value}${label}`}\n          >\n            <Text.h6 align=\"center\">{`${value} ${label}`}</Text.h6>\n          </Styled.ControlItem>\n        ))}\n      </Styled.Controls>\n    </Styled.Wrapper>\n  );\n};\n\nexport default CircleMetrics;\n"]},"metadata":{},"sourceType":"module"}