{"ast":null,"code":"import{baseRequest}from'./base';var endpoint='/moove/users';var initialUserFilter={name:''};export var findAllUsers=function findAllUsers(){var filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialUserFilter;var defaultPage=0;var defaultSize=25;var params=new URLSearchParams({size:\"\".concat(defaultSize),page:\"\".concat(defaultPage),name:filter===null||filter===void 0?void 0:filter.name});return baseRequest(\"\".concat(endpoint,\"?\").concat(params));};export var findUserById=function findUserById(id){return baseRequest(\"\".concat(endpoint,\"/\").concat(id));};export var findUserByEmail=function findUserByEmail(email){var encodeEmail=btoa(email);return baseRequest(\"\".concat(endpoint,\"/\").concat(encodeEmail));};","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/core/providers/users.ts"],"names":["baseRequest","endpoint","initialUserFilter","name","findAllUsers","filter","defaultPage","defaultSize","params","URLSearchParams","size","page","findUserById","id","findUserByEmail","email","encodeEmail","btoa"],"mappings":"AAAA,OAASA,WAAT,KAA4B,QAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,cAAjB,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,IAAI,CAAE,EADkB,CAA1B,CAIA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA4C,IAA3CC,CAAAA,MAA2C,2DAAtBH,iBAAsB,CACtE,GAAMI,CAAAA,WAAW,CAAG,CAApB,CACA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACA,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,CACjCC,IAAI,WAAKH,WAAL,CAD6B,CAEjCI,IAAI,WAAKL,WAAL,CAF6B,CAGjCH,IAAI,CAAEE,MAAF,SAAEA,MAAF,iBAAEA,MAAM,CAAEF,IAHmB,CAApB,CAAf,CAMA,MAAOH,CAAAA,WAAW,WAAIC,QAAJ,aAAgBO,MAAhB,EAAlB,CACD,CAVM,CAYP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,QAAgBb,CAAAA,WAAW,WAAIC,QAAJ,aAAgBY,EAAhB,EAA3B,EAArB,CAEP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAmB,CAChD,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACF,KAAD,CAAxB,CAEA,MAAOf,CAAAA,WAAW,WAAIC,QAAJ,aAAgBe,WAAhB,EAAlB,CACD,CAJM","sourcesContent":["import { baseRequest } from './base';\n\nconst endpoint = '/moove/users';\n\nexport interface UserFilter {\n  name?: string;\n}\n\nconst initialUserFilter = {\n  name: ''\n};\n\nexport const findAllUsers = (filter: UserFilter = initialUserFilter) => {\n  const defaultPage = 0;\n  const defaultSize = 25;\n  const params = new URLSearchParams({\n    size: `${defaultSize}`,\n    page: `${defaultPage}`,\n    name: filter?.name\n  });\n\n  return baseRequest(`${endpoint}?${params}`);\n};\n\nexport const findUserById = (id: string) => baseRequest(`${endpoint}/${id}`);\n\nexport const findUserByEmail = (email: string) => {\n  const encodeEmail = btoa(email);\n\n  return baseRequest(`${endpoint}/${encodeEmail}`);\n};\n"]},"metadata":{},"sourceType":"module"}