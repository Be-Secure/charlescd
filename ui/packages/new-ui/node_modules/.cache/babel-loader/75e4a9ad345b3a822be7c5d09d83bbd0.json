{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import map from'lodash/map';import Icon from'core/components/Icon';import useOutsideClick from'core/hooks/useClickOutside';import Styled from'./styled';var Menu=function Menu(_ref){var children=_ref.children,actions=_ref.actions,active=_ref.active,onSelect=_ref.onSelect;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],switchToggle=_useState2[1];var menuRef=useRef();useOutsideClick(menuRef,function(){switchToggle(!toggle);});var handleSelect=function handleSelect(name){switchToggle(!toggle);onSelect(name);};var renderActions=function renderActions(){return map(actions,function(_ref2){var icon=_ref2.icon,label=_ref2.label,name=_ref2.name;return/*#__PURE__*/React.createElement(Styled.Action,{key:name,onClick:function onClick(){return handleSelect(name);}},/*#__PURE__*/React.createElement(Styled.WrapperIcon,null,name===active&&/*#__PURE__*/React.createElement(Styled.Icon,{color:\"white\",name:\"checkmark\"}),icon&&/*#__PURE__*/React.createElement(Icon,{name:icon})),/*#__PURE__*/React.createElement(Styled.H5,{color:\"dark\"},label));});};return/*#__PURE__*/React.createElement(Styled.Wrapper,null,/*#__PURE__*/React.createElement(Styled.Content,{onClick:function onClick(){return switchToggle(!toggle);}},children),toggle&&/*#__PURE__*/React.createElement(Styled.Actions,{ref:menuRef},renderActions()));};export default Menu;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/core/components/Menu/index.tsx"],"names":["React","useState","useRef","map","Icon","useOutsideClick","Styled","Menu","children","actions","active","onSelect","toggle","switchToggle","menuRef","handleSelect","name","renderActions","icon","label"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAeA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAoD,IAAjDC,CAAAA,QAAiD,MAAjDA,QAAiD,CAAvCC,OAAuC,MAAvCA,OAAuC,CAA9BC,MAA8B,MAA9BA,MAA8B,CAAtBC,QAAsB,MAAtBA,QAAsB,eAChCV,QAAQ,CAAC,KAAD,CADwB,wCACxDW,MADwD,eAChDC,YADgD,eAE/D,GAAMC,CAAAA,OAAO,CAAGZ,MAAM,EAAtB,CAEAG,eAAe,CAACS,OAAD,CAAU,UAAM,CAC7BD,YAAY,CAAC,CAACD,MAAF,CAAZ,CACD,CAFc,CAAf,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAkB,CACrCH,YAAY,CAAC,CAACD,MAAF,CAAZ,CACAD,QAAQ,CAACK,IAAD,CAAR,CACD,CAHD,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SACpBd,CAAAA,GAAG,CAACM,OAAD,CAAU,mBAAGS,CAAAA,IAAH,OAAGA,IAAH,CAASC,KAAT,OAASA,KAAT,CAAgBH,IAAhB,OAAgBA,IAAhB,oBACX,oBAAC,MAAD,CAAQ,MAAR,EAAe,GAAG,CAAEA,IAApB,CAA0B,OAAO,CAAE,yBAAMD,CAAAA,YAAY,CAACC,IAAD,CAAlB,EAAnC,eACE,oBAAC,MAAD,CAAQ,WAAR,MACGA,IAAI,GAAKN,MAAT,eAAmB,oBAAC,MAAD,CAAQ,IAAR,EAAa,KAAK,CAAC,OAAnB,CAA2B,IAAI,CAAC,WAAhC,EADtB,CAEGQ,IAAI,eAAI,oBAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,EAFX,CADF,cAKE,oBAAC,MAAD,CAAQ,EAAR,EAAW,KAAK,CAAC,MAAjB,EAAyBC,KAAzB,CALF,CADW,EAAV,CADiB,EAAtB,CAWA,mBACE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,CAAE,yBAAMN,CAAAA,YAAY,CAAC,CAACD,MAAF,CAAlB,EAAzB,EACGJ,QADH,CADF,CAIGI,MAAM,eACL,oBAAC,MAAD,CAAQ,OAAR,EAAgB,GAAG,CAAEE,OAArB,EAA+BG,aAAa,EAA5C,CALJ,CADF,CAUD,CAlCD,CAoCA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { ReactNode, useState, useRef } from 'react';\nimport map from 'lodash/map';\nimport Icon from 'core/components/Icon';\nimport useOutsideClick from 'core/hooks/useClickOutside';\nimport Styled from './styled';\n\nexport interface Action {\n  icon?: string;\n  label: string;\n  name: string;\n}\n\nexport interface Props {\n  children: ReactNode;\n  actions: Action[];\n  active?: string;\n  onSelect: (name: string) => void;\n}\n\nconst Menu = ({ children, actions, active, onSelect }: Props) => {\n  const [toggle, switchToggle] = useState(false);\n  const menuRef = useRef<HTMLDivElement>();\n\n  useOutsideClick(menuRef, () => {\n    switchToggle(!toggle);\n  });\n\n  const handleSelect = (name: string) => {\n    switchToggle(!toggle);\n    onSelect(name);\n  };\n\n  const renderActions = () =>\n    map(actions, ({ icon, label, name }: Action) => (\n      <Styled.Action key={name} onClick={() => handleSelect(name)}>\n        <Styled.WrapperIcon>\n          {name === active && <Styled.Icon color=\"white\" name=\"checkmark\" />}\n          {icon && <Icon name={icon} />}\n        </Styled.WrapperIcon>\n        <Styled.H5 color=\"dark\">{label}</Styled.H5>\n      </Styled.Action>\n    ));\n\n  return (\n    <Styled.Wrapper>\n      <Styled.Content onClick={() => switchToggle(!toggle)}>\n        {children}\n      </Styled.Content>\n      {toggle && (\n        <Styled.Actions ref={menuRef}>{renderActions()}</Styled.Actions>\n      )}\n    </Styled.Wrapper>\n  );\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}