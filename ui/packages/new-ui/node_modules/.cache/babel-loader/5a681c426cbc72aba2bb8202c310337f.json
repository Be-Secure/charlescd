{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import map from'lodash/map';import isEmpty from'lodash/isEmpty';import Text from'core/components/Text';import{useGlobalState}from'core/state/hooks';import{getProfileByKey}from'core/utils/profile';import useCircles,{CIRCLE_TYPES}from'../hooks';import{getDefaultCircle,prepareCircles}from'./helpers';import CirclesListItem from'./Item';import Loader from'./Loaders';import Styled from'./styled';var CirclesList=function CirclesList(){var _useCircles=useCircles(CIRCLE_TYPES.metrics),_useCircles2=_slicedToArray(_useCircles,3),getCircles=_useCircles2[2];var _useGlobalState=useGlobalState(function(_ref){var circles=_ref.circles;return circles;}),list=_useGlobalState.metrics;var profileName=getProfileByKey('name');useEffect(function(){getCircles();},[getCircles]);var renderList=function renderList(){var _getDefaultCircle;return/*#__PURE__*/React.createElement(Styled.Content,null,/*#__PURE__*/React.createElement(Styled.Default,null,/*#__PURE__*/React.createElement(CirclesListItem,Object.assign({key:(_getDefaultCircle=getDefaultCircle(list===null||list===void 0?void 0:list.content))===null||_getDefaultCircle===void 0?void 0:_getDefaultCircle.id},getDefaultCircle(list===null||list===void 0?void 0:list.content)))),/*#__PURE__*/React.createElement(Styled.Items,null,map(prepareCircles(list===null||list===void 0?void 0:list.content),function(item){return/*#__PURE__*/React.createElement(CirclesListItem,Object.assign({key:item.id},item));})));};var renderHeader=function renderHeader(){return/*#__PURE__*/React.createElement(Styled.Header,null,/*#__PURE__*/React.createElement(Text.h2,{color:\"light\"},profileName,\", this is the health of your circles.\"),/*#__PURE__*/React.createElement(Text.h2,{color:\"light\"},\"You can open a circle for more information.\"));};return/*#__PURE__*/React.createElement(Styled.Wrapper,null,isEmpty(list===null||list===void 0?void 0:list.content)?/*#__PURE__*/React.createElement(Loader.Header,null):renderHeader(),isEmpty(list===null||list===void 0?void 0:list.content)?/*#__PURE__*/React.createElement(Loader.Content,null):renderList());};export default CirclesList;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Circles/List/index.tsx"],"names":["React","useEffect","map","isEmpty","Text","useGlobalState","getProfileByKey","useCircles","CIRCLE_TYPES","getDefaultCircle","prepareCircles","CirclesListItem","Loader","Styled","CirclesList","metrics","getCircles","circles","list","profileName","renderList","content","id","item","renderHeader"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,eAAT,KAAgC,oBAAhC,CAEA,MAAOC,CAAAA,UAAP,EAAqBC,YAArB,KAAyC,UAAzC,CACA,OAASC,gBAAT,CAA2BC,cAA3B,KAAiD,WAAjD,CACA,MAAOC,CAAAA,eAAP,KAA4B,QAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBACCP,UAAU,CAACC,YAAY,CAACO,OAAd,CADX,4CACbC,UADa,qCAEEX,cAAc,CACtC,kBAAGY,CAAAA,OAAH,MAAGA,OAAH,OAAiBA,CAAAA,OAAjB,EADsC,CAFhB,CAEPC,IAFO,iBAEhBH,OAFgB,CAKxB,GAAMI,CAAAA,WAAW,CAAGb,eAAe,CAAC,MAAD,CAAnC,CAEAL,SAAS,CAAC,UAAM,CACde,UAAU,GACX,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,4CACjB,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,eAAD,gBACE,GAAG,oBAAEX,gBAAgB,CAACS,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEG,OAAP,CAAlB,4CAAE,kBAAiCC,EADxC,EAEMb,gBAAgB,CAACS,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEG,OAAP,CAFtB,EADF,CADF,cAQE,oBAAC,MAAD,CAAQ,KAAR,MACGnB,GAAG,CAACQ,cAAc,CAACQ,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEG,OAAP,CAAf,CAAgC,SAAAE,IAAI,qBACtC,oBAAC,eAAD,gBAAiB,GAAG,CAAEA,IAAI,CAACD,EAA3B,EAAmCC,IAAnC,EADsC,EAApC,CADN,CARF,CADiB,EAAnB,CAiBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBACnB,oBAAC,MAAD,CAAQ,MAAR,mBACE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,OAAf,EACGL,WADH,yCADF,cAIE,oBAAC,IAAD,CAAM,EAAN,EAAS,KAAK,CAAC,OAAf,gDAJF,CADmB,EAArB,CAWA,mBACE,oBAAC,MAAD,CAAQ,OAAR,MACGhB,OAAO,CAACe,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEG,OAAP,CAAP,cAAyB,oBAAC,MAAD,CAAQ,MAAR,MAAzB,CAA6CG,YAAY,EAD5D,CAEGrB,OAAO,CAACe,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEG,OAAP,CAAP,cAAyB,oBAAC,MAAD,CAAQ,OAAR,MAAzB,CAA8CD,UAAU,EAF3D,CADF,CAMD,CA7CD,CA+CA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport map from 'lodash/map';\nimport isEmpty from 'lodash/isEmpty';\nimport Text from 'core/components/Text';\nimport { useGlobalState } from 'core/state/hooks';\nimport { getProfileByKey } from 'core/utils/profile';\nimport { CircleState } from '../interfaces/CircleState';\nimport useCircles, { CIRCLE_TYPES } from '../hooks';\nimport { getDefaultCircle, prepareCircles } from './helpers';\nimport CirclesListItem from './Item';\nimport Loader from './Loaders';\nimport Styled from './styled';\n\nconst CirclesList = () => {\n  const [, , getCircles] = useCircles(CIRCLE_TYPES.metrics);\n  const { metrics: list } = useGlobalState<CircleState>(\n    ({ circles }) => circles\n  );\n  const profileName = getProfileByKey('name');\n\n  useEffect(() => {\n    getCircles();\n  }, [getCircles]);\n\n  const renderList = () => (\n    <Styled.Content>\n      <Styled.Default>\n        <CirclesListItem\n          key={getDefaultCircle(list?.content)?.id}\n          {...getDefaultCircle(list?.content)}\n        />\n      </Styled.Default>\n\n      <Styled.Items>\n        {map(prepareCircles(list?.content), item => (\n          <CirclesListItem key={item.id} {...item} />\n        ))}\n      </Styled.Items>\n    </Styled.Content>\n  );\n\n  const renderHeader = () => (\n    <Styled.Header>\n      <Text.h2 color=\"light\">\n        {profileName}, this is the health of your circles.\n      </Text.h2>\n      <Text.h2 color=\"light\">\n        You can open a circle for more information.\n      </Text.h2>\n    </Styled.Header>\n  );\n\n  return (\n    <Styled.Wrapper>\n      {isEmpty(list?.content) ? <Loader.Header /> : renderHeader()}\n      {isEmpty(list?.content) ? <Loader.Content /> : renderList()}\n    </Styled.Wrapper>\n  );\n};\n\nexport default CirclesList;\n"]},"metadata":{},"sourceType":"module"}