{"ast":null,"code":"import _slicedToArray from\"/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{lazy,useState}from'react';import isUndefined from'lodash/isUndefined';import{Route,Redirect,Switch}from'react-router-dom';import Sidebar from'modules/Main/Sidebar';import Footer from'modules/Main/Footer';import{setExpandMode,getExpandMode}from'core/utils/sidebar';import routes from'core/constants/routes';import Styled from'./styled';var Circles=lazy(function(){return import('modules/Circles');});var Hypotheses=lazy(function(){return import('modules/Hypotheses');});var Workspaces=lazy(function(){return import('modules/Settings/Workspaces');});var Users=lazy(function(){return import('modules/Users');});var Main=function Main(){var _useState=useState(getExpandMode()),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setSideExpanded=_useState2[1];var onClickExpand=function onClickExpand(_ref){var status=_ref.status,persist=_ref.persist;var newStatus=isUndefined(status)?!isExpanded:status;setSideExpanded(newStatus);if(persist){setExpandMode(newStatus);}};return/*#__PURE__*/React.createElement(Styled.Main,{isSidebarExpanded:isExpanded},/*#__PURE__*/React.createElement(Sidebar,{isExpanded:isExpanded,onClickExpand:onClickExpand}),/*#__PURE__*/React.createElement(Styled.Content,{\"data-testid\":\"main-content\"},/*#__PURE__*/React.createElement(React.Suspense,{fallback:\"\"},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:routes.circles,component:Circles}),/*#__PURE__*/React.createElement(Route,{path:routes.hypotheses,component:Hypotheses}),/*#__PURE__*/React.createElement(Route,{path:routes.workspace,component:Workspaces}),/*#__PURE__*/React.createElement(Route,{path:routes.users,component:Users}),/*#__PURE__*/React.createElement(Redirect,{exact:true,from:routes.main,to:routes.circles})))),/*#__PURE__*/React.createElement(Footer,null));};export default Main;","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/modules/Main/index.tsx"],"names":["React","lazy","useState","isUndefined","Route","Redirect","Switch","Sidebar","Footer","setExpandMode","getExpandMode","routes","Styled","Circles","Hypotheses","Workspaces","Users","Main","isExpanded","setSideExpanded","onClickExpand","status","persist","newStatus","circles","hypotheses","workspace","users","main"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAASC,KAAT,CAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,kBAAxC,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,oBAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAGZ,IAAI,CAAC,iBAAM,QAAO,iBAAP,CAAN,EAAD,CAApB,CACA,GAAMa,CAAAA,UAAU,CAAGb,IAAI,CAAC,iBAAM,QAAO,oBAAP,CAAN,EAAD,CAAvB,CACA,GAAMc,CAAAA,UAAU,CAAGd,IAAI,CAAC,iBAAM,QAAO,6BAAP,CAAN,EAAD,CAAvB,CACA,GAAMe,CAAAA,KAAK,CAAGf,IAAI,CAAC,iBAAM,QAAO,eAAP,CAAN,EAAD,CAAlB,CAEA,GAAMgB,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACqBf,QAAQ,CAACQ,aAAa,EAAd,CAD7B,wCACVQ,UADU,eACEC,eADF,eAGjB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAsC,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAC1D,GAAMC,CAAAA,SAAS,CAAGpB,WAAW,CAACkB,MAAD,CAAX,CAAsB,CAACH,UAAvB,CAAoCG,MAAtD,CACAF,eAAe,CAACI,SAAD,CAAf,CACA,GAAID,OAAJ,CAAa,CACXb,aAAa,CAACc,SAAD,CAAb,CACD,CACF,CAND,CAQA,mBACE,oBAAC,MAAD,CAAQ,IAAR,EAAa,iBAAiB,CAAEL,UAAhC,eACE,oBAAC,OAAD,EAAS,UAAU,CAAEA,UAArB,CAAiC,aAAa,CAAEE,aAAhD,EADF,cAEE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,cAAY,cAA5B,eACE,oBAAC,KAAD,CAAO,QAAP,EAAgB,QAAQ,CAAC,EAAzB,eACE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAET,MAAM,CAACa,OAApB,CAA6B,SAAS,CAAEX,OAAxC,EADF,cAEE,oBAAC,KAAD,EAAO,IAAI,CAAEF,MAAM,CAACc,UAApB,CAAgC,SAAS,CAAEX,UAA3C,EAFF,cAGE,oBAAC,KAAD,EAAO,IAAI,CAAEH,MAAM,CAACe,SAApB,CAA+B,SAAS,CAAEX,UAA1C,EAHF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAEJ,MAAM,CAACgB,KAApB,CAA2B,SAAS,CAAEX,KAAtC,EAJF,cAKE,oBAAC,QAAD,EAAU,KAAK,KAAf,CAAgB,IAAI,CAAEL,MAAM,CAACiB,IAA7B,CAAmC,EAAE,CAAEjB,MAAM,CAACa,OAA9C,EALF,CADF,CADF,CAFF,cAaE,oBAAC,MAAD,MAbF,CADF,CAiBD,CA5BD,CA8BA,cAAeP,CAAAA,IAAf","sourcesContent":["import React, { lazy, useState } from 'react';\nimport isUndefined from 'lodash/isUndefined';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Sidebar from 'modules/Main/Sidebar';\nimport Footer from 'modules/Main/Footer';\nimport { setExpandMode, getExpandMode } from 'core/utils/sidebar';\nimport routes from 'core/constants/routes';\nimport { ExpandClick } from './Sidebar/Types';\nimport Styled from './styled';\n\nconst Circles = lazy(() => import('modules/Circles'));\nconst Hypotheses = lazy(() => import('modules/Hypotheses'));\nconst Workspaces = lazy(() => import('modules/Settings/Workspaces'));\nconst Users = lazy(() => import('modules/Users'));\n\nconst Main = () => {\n  const [isExpanded, setSideExpanded] = useState(getExpandMode());\n\n  const onClickExpand = ({ status, persist }: ExpandClick) => {\n    const newStatus = isUndefined(status) ? !isExpanded : status;\n    setSideExpanded(newStatus);\n    if (persist) {\n      setExpandMode(newStatus);\n    }\n  };\n\n  return (\n    <Styled.Main isSidebarExpanded={isExpanded}>\n      <Sidebar isExpanded={isExpanded} onClickExpand={onClickExpand} />\n      <Styled.Content data-testid=\"main-content\">\n        <React.Suspense fallback=\"\">\n          <Switch>\n            <Route path={routes.circles} component={Circles} />\n            <Route path={routes.hypotheses} component={Hypotheses} />\n            <Route path={routes.workspace} component={Workspaces} />\n            <Route path={routes.users} component={Users} />\n            <Redirect exact from={routes.main} to={routes.circles} />\n          </Switch>\n        </React.Suspense>\n      </Styled.Content>\n      <Footer />\n    </Styled.Main>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}