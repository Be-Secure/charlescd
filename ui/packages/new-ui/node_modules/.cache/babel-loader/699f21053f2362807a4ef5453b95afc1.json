{"ast":null,"code":"import{baseRequest}from'./base';var endpoint='/auth/realms/darwin/protocol/openid-connect/token';var headers={'Content-Type':'application/x-www-form-urlencoded'};var clientId='darwin-client';export var login=function login(username,password){var grantType='password';var data=\"grant_type=\".concat(grantType,\"&client_id=\").concat(clientId,\"&username=\").concat(username,\"&password=\").concat(password);return baseRequest(endpoint,data,{method:'POST',headers:headers});};export var renewToken=function renewToken(refreshToken){var grantType='refresh_token';var data=\"grant_type=\".concat(grantType,\"&client_id=\").concat(clientId,\"&refresh_token=\").concat(refreshToken);return baseRequest(endpoint,data,{method:'POST',headers:headers});};","map":{"version":3,"sources":["/Users/ricardobasilio/projects/charlescd/ui/packages/new-ui/src/core/providers/auth.ts"],"names":["baseRequest","endpoint","headers","clientId","login","username","password","grantType","data","method","renewToken","refreshToken"],"mappings":"AAAA,OAASA,WAAT,KAA4B,QAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,mDAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,CACd,eAAgB,mCADF,CAAhB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,eAAjB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,QAAD,CAAmBC,QAAnB,CAAwC,CAC3D,GAAMC,CAAAA,SAAS,CAAG,UAAlB,CACA,GAAMC,CAAAA,IAAI,sBAAiBD,SAAjB,uBAAwCJ,QAAxC,sBAA6DE,QAA7D,sBAAkFC,QAAlF,CAAV,CAEA,MAAON,CAAAA,WAAW,CAACC,QAAD,CAAWO,IAAX,CAAiB,CAAEC,MAAM,CAAE,MAAV,CAAkBP,OAAO,CAAPA,OAAlB,CAAjB,CAAlB,CACD,CALM,CAOP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,YAAD,CAA0B,CAClD,GAAMJ,CAAAA,SAAS,CAAG,eAAlB,CACA,GAAMC,CAAAA,IAAI,sBAAiBD,SAAjB,uBAAwCJ,QAAxC,2BAAkEQ,YAAlE,CAAV,CAEA,MAAOX,CAAAA,WAAW,CAACC,QAAD,CAAWO,IAAX,CAAiB,CAAEC,MAAM,CAAE,MAAV,CAAkBP,OAAO,CAAPA,OAAlB,CAAjB,CAAlB,CACD,CALM","sourcesContent":["import { baseRequest } from './base';\n\nconst endpoint = '/auth/realms/darwin/protocol/openid-connect/token';\nconst headers = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nconst clientId = 'darwin-client';\n\nexport const login = (username: string, password: string) => {\n  const grantType = 'password';\n  const data = `grant_type=${grantType}&client_id=${clientId}&username=${username}&password=${password}`;\n\n  return baseRequest(endpoint, data, { method: 'POST', headers });\n};\n\nexport const renewToken = (refreshToken: string) => {\n  const grantType = 'refresh_token';\n  const data = `grant_type=${grantType}&client_id=${clientId}&refresh_token=${refreshToken}`;\n\n  return baseRequest(endpoint, data, { method: 'POST', headers });\n};\n"]},"metadata":{},"sourceType":"module"}