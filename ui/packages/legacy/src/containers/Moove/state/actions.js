/* eslint-disable */
export const MOOVE_ACTION_TYPES = {
  GET_COLUMNS: 'MOOVE/GET_COLUMNS',
  LOADED_COLUMNS: 'MOOVE/LOADED_COLUMNS',
  UPDATE_CARD: 'MOOVE/UPDATE_CARD',
  UPDATE_CARD_USERS: 'MOOVE/UPDATE_CARD_USERS',
  UPDATE_CARD_COLUMN: 'MOOVE/UPDATE_CARD_COLUMN',
  REMOVE_CARD_COLUMN: 'MOOVE/REMOVE_CARD_COLUMN',
  ORDER_CARDS: 'MOOVE/ORDER_CARDS',
  UPDATE_RELEASE: 'MOOVE/UPDATE_RELEASE',
  CARD_UPDATED: 'MOOVE/CARD_UPDATED',
  CREATE_CARD: 'MOOVE/CREATE_CARD',
  TOGGLE_CREATE_LOADING: 'MOOVE/TOGGLE_CREATE_LOADING',
  TOGGLE_MODULES_LOADING: 'MOOVE/TOGGLE_MODULES_LOADING',
  TOGGLE_CARD_LOADING: 'MOOVE/TOGGLE_CARD_LOADING',
  TOGGLE_COLUMN_LOADING: 'MOOVE/TOGGLE_COLUMN_LOADING',
  TOGGLE_COMMENTS_LOADING: 'MOOVE/TOGGLE_COMMENTS_LOADING',
  TOGGLE_GENERATING_RELEASE: 'MOOVE/TOGGLE_GENERATING_RELEASE',
  DELETE_BUILD: 'MOOVE/DELETE_BUILD',
  ARCHIVE_BUILD: 'MOOVE/ARCHIVE_BUILD',
  GET_CARD: 'MOOVE/GET_CARD',
  DELETE_CARD: 'MOOVE/DELETE_CARD',
  ARCHIVE_CARD: 'MOOVE/ARCHIVE_CARD',
  LOADED_CARD: 'MOOVE/LOADED_CARD',
  GET_MODULES: 'MOOVE/GET_MODULES',
  LOADED_MODULES: 'MOOVE/LOADED_MODULES',
  GENERATE_RELEASE_CANDIDATE: 'MOOVE/GENERATE_RELEASE_CANDIDATE',
  DEPLOY_RELEASE_CANDIDATE: 'MOOVE/DEPLOY_RELEASE_CANDIDATE',
  START_POLLING: 'MOOVE/START_POLLING',
  STOP_POLLING: 'MOOVE/STOP_POLLING',
  ADD_COMMENT: 'MOOVE/ADD_COMMENT',
  RESET: 'MOOVE/RESET',
  RESET_CARD: 'MOOVE/RESET_CARD',
  UPDATE_COLUMN_WITH_NEW_CARD: 'MOOVE/UPDATE_COLUMN_WITH_NEW_CARD',
  UPDATE_COLUMN_WITHOUT_NEW_CARD: 'MOOVE/UPDATE_COLUMN_WITHOUT_NEW_CARD',
  UPDATE_TEAM_VALIDATION_WITH_NEW_CARD: 'MOOVE/UPDATE_TEAM_VALIDATION_WITH_NEW_CARD',
  GET_BUILD: 'MOOVE/GET_BUILD',
  LOADED_BUILD: 'MOOVE/LOADED_BUILD',
  RESET_BUILD: 'MOOVE/RESET_BUILD',
}

export const mooveActions = {
  getColumns: hypothesisId => ({ type: MOOVE_ACTION_TYPES.GET_COLUMNS, hypothesisId }),
  loadedColumns: columns => ({ type: MOOVE_ACTION_TYPES.LOADED_COLUMNS, columns }),
  updateCard: (cardId, data) => {
    return { type: MOOVE_ACTION_TYPES.UPDATE_CARD, cardId, data }
  },
  updateCardUsers: (cardId, data) => ({ type: MOOVE_ACTION_TYPES.UPDATE_CARD_USERS, cardId, data }),
  deleteCardColumn: cardId => ({ type: MOOVE_ACTION_TYPES.REMOVE_CARD_COLUMN, cardId }),
  updateCardColumn: (hypothesisId, cardId, data) => ({
    type: MOOVE_ACTION_TYPES.UPDATE_CARD_COLUMN, hypothesisId, cardId, data,
  }),
  orderCardsInColumn: (hypothesisId, data) => ({
    type: MOOVE_ACTION_TYPES.ORDER_CARDS, hypothesisId, data,
  }),
  updateRelease: (buildId, columnId) => ({
    type: MOOVE_ACTION_TYPES.UPDATE_RELEASE, buildId, columnId,
  }),
  toggleCreateLoading: () => ({ type: MOOVE_ACTION_TYPES.TOGGLE_CREATE_LOADING }),
  toggleModulesLoading: () => ({ type: MOOVE_ACTION_TYPES.TOGGLE_MODULES_LOADING }),
  toggleCardLoading: () => ({ type: MOOVE_ACTION_TYPES.TOGGLE_CARD_LOADING }),
  toggleColumnLoading: toggle => ({ type: MOOVE_ACTION_TYPES.TOGGLE_COLUMN_LOADING, toggle }),
  toggleCommentsLoading: () => ({ type: MOOVE_ACTION_TYPES.TOGGLE_COMMENTS_LOADING }),
  toggleGeneratingRelease: () => ({ type: MOOVE_ACTION_TYPES.TOGGLE_GENERATING_RELEASE }),
  deleteBuild: cardId => ({ type: MOOVE_ACTION_TYPES.DELETE_BUILD, cardId }),
  archiveBuild: cardId => ({ type: MOOVE_ACTION_TYPES.ARCHIVE_BUILD, cardId }),
  createCard: payload => ({ type: MOOVE_ACTION_TYPES.CREATE_CARD, payload }),
  getCard: cardId => ({ type: MOOVE_ACTION_TYPES.GET_CARD, cardId }),
  deleteCard: cardId => ({ type: MOOVE_ACTION_TYPES.DELETE_CARD, cardId }),
  archiveCard: cardId => ({ type: MOOVE_ACTION_TYPES.ARCHIVE_CARD, cardId }),
  loadedCard: card => ({ type: MOOVE_ACTION_TYPES.LOADED_CARD, card }),
  getModules: () => ({ type: MOOVE_ACTION_TYPES.GET_MODULES }),
  loadedModules: modules => ({ type: MOOVE_ACTION_TYPES.LOADED_MODULES, modules }),
  generateReleaseCandidate: data => ({
    type: MOOVE_ACTION_TYPES.GENERATE_RELEASE_CANDIDATE, data,
  }),
  deployReleaseCandidate: (data, hypothesisId) => ({
    type: MOOVE_ACTION_TYPES.DEPLOY_RELEASE_CANDIDATE, data, hypothesisId,
  }),
  startPolling: hypothesisId => ({ type: MOOVE_ACTION_TYPES.START_POLLING, hypothesisId }),
  stopPolling: () => ({ type: MOOVE_ACTION_TYPES.STOP_POLLING }),
  addComment: (cardId, data) => ({ type: MOOVE_ACTION_TYPES.ADD_COMMENT, cardId, data }),
  reset: () => ({ type: MOOVE_ACTION_TYPES.RESET }),
  resetCard: () => ({ type: MOOVE_ACTION_TYPES.RESET_CARD }),
  updateColumnWithNewCard: card => ({ type: MOOVE_ACTION_TYPES.UPDATE_COLUMN_WITH_NEW_CARD, card }),
  updateColumnWithoutNewCard: () => ({ type: MOOVE_ACTION_TYPES.UPDATE_COLUMN_WITHOUT_NEW_CARD }),
  updateTeamValidationWithNewCard: release => ({ type: MOOVE_ACTION_TYPES.UPDATE_TEAM_VALIDATION_WITH_NEW_CARD, release }),
  getBuild: buildId => ({ type: MOOVE_ACTION_TYPES.GET_BUILD, buildId }),
  loadedBuild: build => ({ type: MOOVE_ACTION_TYPES.LOADED_BUILD, build }),
  resetBuild: () => ({ type: MOOVE_ACTION_TYPES.RESET_BUILD }),
}
