// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/ZupIT/charlescd/compass/internal/domain"
	mock "github.com/stretchr/testify/mock"

	plugin "plugin"
)

// PluginRepository is an autogenerated mock type for the PluginRepository type
type PluginRepository struct {
	mock.Mock
}

// FindAll provides a mock function with given fields: category
func (_m *PluginRepository) FindAll(category string) ([]domain.Plugin, error) {
	ret := _m.Called(category)

	var r0 []domain.Plugin
	if rf, ok := ret.Get(0).(func(string) []domain.Plugin); ok {
		r0 = rf(category)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Plugin)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(category)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPluginBySrc provides a mock function with given fields: id
func (_m *PluginRepository) GetPluginBySrc(id string) (*plugin.Plugin, error) {
	ret := _m.Called(id)

	var r0 *plugin.Plugin
	if rf, ok := ret.Get(0).(func(string) *plugin.Plugin); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*plugin.Plugin)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
