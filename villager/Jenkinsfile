// This Source Code Form is subject to the terms of the
// Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at http://mozilla.org/MPL/2.0/.

@Library('ZupSharedLibs@darwin') _

node {
    try {

        buildDockerBuilder {
            dockerRepositoryName = "darwin-villager"
            dockerBuilderImage = "adoptopenjdk/openjdk11:jdk-11.0.4_11-alpine-slim"
            dockerFileBuilder = "DockerfileBuilder"
            dockerFileLocation = "."
            team = "Realwave"
        }

        mvnBuildWithCompose {
            composeFileName = "docker-compose-ci.yml"
            composeService = "darwin-villager"
            composeProjectName = "darwin-villager"
            team = "Realwave"
            useBuilder="true"
        }

//         pom = readMavenPom file: 'pom.xml'
//         sh "echo sonar.projectKey=${pom.artifactId} >> sonar-project.properties"
//         sh "echo sonar.projectVersion=${pom.version} >> sonar-project.properties"
//
//         stage('SonarQube analysis') {
//             def scannerHome = tool 'Sonar Zup';
//             withSonarQubeEnv('Sonar Zup') {
//                 sh "${scannerHome}/bin/sonar-scanner"
//             }
//         }
//
//         sleep 5
//
//         stage("Quality Gate") {
//             timeout(time: 1, unit: 'HOURS') {
//                def qg = waitForQualityGate()
//                if (qg.status != 'OK') {
//                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
//                }
//            }
//         }

        buildDockerContainer {
            dockerRepositoryName = "darwin-villager"
            dockerFileLocation = "."
            team = "Realwave"
        }

    } catch (e) {
        notifyBuildStatus {
            buildStatus = "FAILED"
        }
        throw e
    }

}