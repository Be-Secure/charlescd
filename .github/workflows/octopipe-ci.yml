name: build octopipe

on:
  push:
    branches: [ master ]
    paths:
      - 'octopipe/**'
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
    tags: 
      - '!*'
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'octopipe/**'
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'

jobs:
  static_code_analysis:
    name: StaticCodeAnalysis
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        working-directory: ./octopipe
        run: go build -o dist/octopipe ./cmd/octopipe/*.go
      - name: Run Unit tests
        working-directory: ./octopipe
        run: |
          go test -race -covermode atomic -coverprofile=profile.cov ./...
      - name: Send coverage
        working-directory: ./octopipe
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github
